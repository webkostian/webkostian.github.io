{"version":3,"file":"static/js/907.a7a29f7b.chunk.js","mappings":"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","sources":["components/errorBoundary/ErrorBoundary.js","components/errorMessage/ErrorMessage.js","components/comicsList/ComicsList.js","components/appBanner/AppBanner.js","components/pages/ComicsPage.js","hooks/http.hooks.js","services/MarvelService.js"],"sourcesContent":["import { Component } from \"react\";\r\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\r\n\r\nexport default class ErrorBoundary extends Component {\r\n  state = {\r\n    error: false,\r\n  };\r\n\r\n  componentDidCatch(error, errorInfo) {\r\n    console.log(error, errorInfo);\r\n    this.setState({\r\n      error: true,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    if (this.state.error) {\r\n      return <ErrorMessage />;\r\n    }\r\n\r\n    return this.props.children;\r\n  }\r\n}\r\n","import img from './error.gif';\r\n\r\nconst ErrorMessage = () => {\r\n    return (\r\n        <img style={{ display: 'block', width: \"250px\", height: \"250px\",objectFit: 'contain', margin: \"0 auto\"}}  src={img} alt=\"Error\"/>\r\n    )\r\n}\r\n\r\nexport default ErrorMessage;","import { useState, useEffect, useRef } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\r\nimport Spinner from \"../spinner/Spinner\";\r\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\r\nimport useMarvelService from \"../../services/MarvelService\";\r\nimport \"./comicsList.scss\";\r\n\r\nconst ComicsList = () => {\r\n  const [comicsList, setComicsList] = useState([]);\r\n  const [newItemLoading, setNewItemLoading] = useState(false);\r\n  const [offset, setOffset] = useState(210);\r\n  const [comicsEnded, setComicsEnded] = useState(false);\r\n\r\n  const { loading, error, getAllComics } = useMarvelService();\r\n\r\n  useEffect(() => {\r\n    onRequest(offset, true);\r\n  }, []);\r\n\r\n  const onRequest = (offset, initial) => {\r\n    initial ? setNewItemLoading(false) : setNewItemLoading(true);\r\n    getAllComics(offset).then(onItemListLoaded);\r\n  };\r\n\r\n  const onItemListLoaded = (newCharList) => {\r\n    let ended = false;\r\n    if (newCharList.length < 8) {\r\n      ended = true;\r\n    }\r\n\r\n    setComicsList((comicsList) => [...comicsList, ...newCharList]);\r\n    setNewItemLoading((newItemLoading) => false);\r\n    setOffset((offset) => offset + 8);\r\n    setComicsEnded((charEnded) => ended);\r\n  };\r\n\r\n  const itemRefs = useRef([]);\r\n\r\n  const focusOnItem = (id) => {\r\n    // Я реализовал вариант чуть сложнее, и с классом и с фокусом\r\n    // Но в теории можно оставить только фокус, и его в стилях использовать вместо класса\r\n    // На самом деле, решение с css-классом можно сделать, вынеся персонажа\r\n    // в отдельный компонент. Но кода будет больше, появится новое состояние\r\n    // и не факт, что мы выиграем по оптимизации за счет бОльшего кол-ва элементов\r\n\r\n    // По возможности, не злоупотребляйте рефами, только в крайних случаях\r\n    itemRefs.current.forEach((item) =>\r\n      item.classList.remove(\"char__item_selected\")\r\n    );\r\n    itemRefs.current[id].classList.add(\"char__item_selected\");\r\n    itemRefs.current[id].focus();\r\n  };\r\n\r\n  // Этот метод создан для оптимизации,\r\n  // чтобы не помещать такую конструкцию в метод render\r\n  function renderItems(arr) {\r\n    const items = arr.map((item, i) => {\r\n      let imgStyle = { objectFit: \"cover\" };\r\n      if (\r\n        item.thumbnail ===\r\n          \"http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg\" ||\r\n        \"http://i.annihil.us/u/prod/marvel/i/mg/f/60/4c002e0305708.gif\"\r\n      ) {\r\n        imgStyle = { objectFit: \"unset\" };\r\n      }\r\n\r\n      return (\r\n        <CSSTransition\r\n          key={`${item.id}${i}`}\r\n          timeout={300}\r\n          classNames=\"comics__item\"\r\n        >\r\n          <li\r\n            className=\"comics__item\"\r\n            tabIndex={0}\r\n            ref={(el) => (itemRefs.current[i] = el)}\r\n            key={`${item.id}${i}`}\r\n            onClick={() => {\r\n              focusOnItem(i);\r\n            }}\r\n            onKeyPress={(e) => {\r\n              if (e.key === \" \" || e.key === \"Enter\") {\r\n                focusOnItem(i);\r\n              }\r\n            }}\r\n          >\r\n            <Link to={`/comics/${item.id}`}>\r\n              <img\r\n                src={item.thumbnail}\r\n                alt={item.title}\r\n                className=\"comics__item-img\"\r\n                style={imgStyle}\r\n              />\r\n              <div className=\"comics__item-name\">{item.title}</div>\r\n              <div className=\"comics__item-price\">{item.price}</div>\r\n            </Link>\r\n          </li>\r\n        </CSSTransition>\r\n      );\r\n    });\r\n    return (\r\n      <ul className=\"comics__grid\">\r\n        <TransitionGroup component={null}>{items}</TransitionGroup>\r\n      </ul>\r\n    );\r\n  }\r\n\r\n  const items = renderItems(comicsList);\r\n  const errorMessage = error ? <ErrorMessage /> : null;\r\n  const spinner = loading && !newItemLoading ? <Spinner /> : null;\r\n\r\n  return (\r\n    <div className=\"comics__list\">\r\n      {errorMessage}\r\n      {spinner}\r\n      {items}\r\n      <button\r\n        className=\"button button__main button__long\"\r\n        disabled={newItemLoading}\r\n        style={{ display: comicsEnded ? \"none\" : \"block\" }}\r\n        onClick={() => onRequest(offset, false)}\r\n      >\r\n        <div className=\"inner\">load more</div>\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ComicsList;\r\n","import './appBanner.scss';\r\nimport avengers from '../../resources/img/Avengers.png';\r\nimport avengersLogo from '../../resources/img/Avengers_logo.png';\r\n\r\nconst AppBanner = () => {\r\n    return (\r\n        <div className=\"app__banner\">\r\n            <img src={avengers} alt=\"Avengers\"/>\r\n            <div className=\"app__banner-text\">\r\n                New comics every week!<br/>\r\n                Stay tuned!\r\n            </div>\r\n            <img src={avengersLogo} alt=\"Avengers logo\"/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AppBanner;","import ErrorBoundary from \"../errorBoundary/ErrorBoundary\";\r\nimport ComicsList from \"../comicsList/ComicsList\";\r\nimport AppBanner from \"../appBanner/AppBanner\";\r\n\r\nconst ComicsPage = () => {\r\n  return (\r\n    <>\r\n      <AppBanner />\r\n      <ErrorBoundary>\r\n        <ComicsList />\r\n      </ErrorBoundary>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ComicsPage;\r\n","import { useCallback, useState } from \"react\";\r\n\r\n\r\nconst useHttp = () => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  const request = useCallback(\r\n    async (\r\n      url,\r\n      metod = \"GET\",\r\n      body = null,\r\n      heders = { \"Content-Type\": \"application/json\" }\r\n    ) => {\r\n      setLoading(true);\r\n      try {\r\n        const response = await fetch(url, { metod, body, heders });\r\n        if (!response.ok) {\r\n          throw new Error(`Could not fetch ${url}, status: ${response.status}`);\r\n        }\r\n        const data = await response.json();\r\n        setLoading(false);\r\n        return data;\r\n      } catch (e) {\r\n        setLoading(false);\r\n        setError(e.message);\r\n        throw e;\r\n      }\r\n    },\r\n    []\r\n  );\r\n\r\n  const clearError = useCallback(() => setError(null),[]);\r\n\r\n  return {loading, error, request, clearError};\r\n};\r\n\r\nexport default useHttp;\r\n","import md5 from \"js-md5\";\r\nimport useHttp from \"../hooks/http.hooks\";\r\n\r\nconst useMarvelService = () => {\r\n  const { loading, error, request, clearError } = useHttp();\r\n\r\n  const _apiBase = \"https://gateway.marvel.com:443/v1/public/\";\r\n  const _baseOffset = 210;\r\n  const _charLimit = 9;\r\n\r\n  const getTemporaryKey = (url) => {\r\n    const publickey = process.env.REACT_APP_PUB_KEY;\r\n    const privatekey = process.env.REACT_APP_PRV_KEY;\r\n    const ts = new Date().getTime();\r\n    const stringToHash = ts + privatekey + publickey;\r\n    const hash = md5(stringToHash);\r\n    const prefix = url.indexOf(\"?\") === -1 ? \"?\" : \"&\";\r\n    return `${prefix}ts=${ts}&apikey=${publickey}&hash=${hash}`;\r\n  };\r\n\r\n  const getAllCharacters = async (offset = _baseOffset) => {\r\n    const url = `characters?orderBy=name&limit=${_charLimit}&offset=${offset}`;\r\n    const tempKey = getTemporaryKey(url);\r\n    const res = await request(`${_apiBase}${url}${tempKey}`);\r\n    return res.data.results.map(_transformCharacter);\r\n  };\r\n\r\n  const getCharacter = async (id) => {\r\n    const url = `characters/${id}`;\r\n    const tempKey = getTemporaryKey(url);\r\n    const res = await request(`${_apiBase}${url}${tempKey}`);\r\n    return _transformCharacter(res.data.results[0]);\r\n  };\r\n\r\n  const getAllComics = async (offset = 0, limit = 8) => {\r\n    const url = `comics?limit=${limit}&offset=${offset}`;\r\n    const tempKey = getTemporaryKey(url);\r\n    const res = await request(`${_apiBase}${url}${tempKey}`);\r\n    return res.data.results.map(_transformComics);\r\n  };\r\n\r\n  const getComic = async (id) => {\r\n    const url = `comics/${id}`;\r\n    const tempKey = getTemporaryKey(url);\r\n    const res = await request(`${_apiBase}${url}${tempKey}`);\r\n    return _transformComics(res.data.results[0]);\r\n}\r\n\r\n  const _transformCharacter = (char) => {\r\n    return {\r\n      id: char.id,\r\n      name: char.name,\r\n      description: char.description\r\n        ? `${char.description.slice(0, 210)}...`\r\n        : \"There is no description for this character\",\r\n      thumbnail: char.thumbnail.path + \".\" + char.thumbnail.extension,\r\n      homepage: char.urls[0].url,\r\n      wiki: char.urls[1].url,\r\n      comics: char.comics.items,\r\n    };\r\n  };\r\n\r\n  const _transformComics = (comics, i) => {\r\n    return {\r\n      id: comics.id,      \r\n      title: comics.title,\r\n      description: comics.description || \"There is no description\",\r\n      pageCount: comics.pageCount\r\n        ? `${comics.pageCount} p.`\r\n        : \"No information about the number of pages\",\r\n      thumbnail: comics.thumbnail.path + \".\" + comics.thumbnail.extension,\r\n      language: comics.textObjects.language || \"en-us\",\r\n      price: comics.prices.price ? `${comics.prices.price}$` : \"not available\",\r\n    };\r\n  };\r\n\r\n  return {\r\n    loading,\r\n    error,\r\n    getAllCharacters,\r\n    getCharacter,\r\n    clearError,\r\n    getAllComics,\r\n    getComic,\r\n  };\r\n};\r\n\r\nexport default useMarvelService;\r\n"],"names":["ErrorBoundary","state","error","errorInfo","console","log","this","setState","props","children","Component","style","display","width","height","objectFit","margin","src","img","alt","useState","comicsList","setComicsList","newItemLoading","setNewItemLoading","offset","setOffset","comicsEnded","setComicsEnded","useMarvelService","loading","getAllComics","useEffect","onRequest","initial","then","onItemListLoaded","newCharList","ended","length","charEnded","itemRefs","useRef","focusOnItem","id","current","forEach","item","classList","remove","add","focus","items","arr","map","i","imgStyle","thumbnail","CSSTransition","timeout","classNames","className","tabIndex","ref","el","onClick","onKeyPress","e","key","to","title","price","TransitionGroup","component","renderItems","errorMessage","ErrorMessage","spinner","Spinner","disabled","avengers","avengersLogo","setLoading","setError","request","useCallback","url","metod","body","heders","fetch","response","ok","Error","status","json","data","message","clearError","useHttp","_apiBase","getTemporaryKey","publickey","process","ts","Date","getTime","stringToHash","hash","md5","prefix","indexOf","getAllCharacters","tempKey","res","results","_transformCharacter","getCharacter","limit","_transformComics","getComic","char","name","description","slice","path","extension","homepage","urls","wiki","comics","pageCount","language","textObjects","prices"],"sourceRoot":""}